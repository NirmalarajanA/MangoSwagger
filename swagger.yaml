openapi: 3.0.0
info:
  description: Invoice Validator API 
  version: "1.0.0"
  title: Simple Invoice Validation API
servers:
  - url: https://virtserver.swaggerhub.com/AKSHAYANN03/MangoValidator/1.0.0
    description: SwaggerHub API Auto Mocking
tags:
  - name: Authentication 
  - name: Validation  
  - name: Invoice
  - name: Report 
  - name: Server 
paths:
  /auth/login:
    post:
      tags:
        - Authentication 
      summary: User authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials provided
  /auth/logout:
    post:
      tags:
        - Authentication 
      summary: User logout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Successful logout
        '400':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid token provided
  /auth/register:
    post:
      tags:
        - Authentication 
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '409':
          description: Existing user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User already exists
  /validate:
    post:
      summary: Validate invoices against Australian standards
      tags: 
        - Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceData'
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: Invalid invoice format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
  /invoices/{id}:
    put:
      summary: Upload an invoice
      tags: 
        - Invoice
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the invoice
          schema:
            type: string
        - name: invoiceData
          in: query
          required: true
          description: Invoice data
          schema:
            $ref: '#/components/schemas/InvoiceData'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceData'
      responses:
        '200':
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
    delete:
      summary: Delete invoice by ID
      tags: 
        - Invoice
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the invoice
          schema:
            type: string
      responses:
        '200':
          description: Invoice deleted successfully
        '404':
          description: Invoice not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
  /reports/invoices/json:
    get:
      summary: Generate reports on invoices (JSON)
      tags: 
        - Report
      responses:
        '200':
          description: Report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
  /reports/invoices/pdf:
    get:
      summary: Generate reports on invoices (PDF)
      tags: 
        - Report
      responses:
        '200':
          description: Report generated successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /reports/invoices/html:
    get:
      summary: Generate reports on invoices (HTML)
      tags: 
        - Report
      responses:
        '200':
          description: Report generated successfully
          content:
            text/html:
              schema:
                type: string
  /settings:
    put:
      tags:
        - Server 
      summary: Update system settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingsData'
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
  /logs:
    get:
      tags:
        - Server
      summary: Access system logs
      responses:
        '200':
          description: Logs accessed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
  /docs:
    get:
      tags:
        - Server
      summary: Access API documentation
      responses:
        '200':
          description: Documentation accessed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documentation'
  /help:
    get:
      tags:
        - Server
      summary: Access help and support resources
      responses:
        '200':
          description: Help resources accessed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelpResources'
  /ping:
    get:
      tags:
        - Server
      summary: Check if the API server is running
      responses:
        '200':
          description: API server is running
          content:
            text/plain:
              schema:
                type: string
  /version:
    get:
      tags:
        - Server
      summary: Retrieve API version information
      responses:
        '200':
          description: API version retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
  /log/history:
    get:
      tags:
        - Server
      summary: Retrieve historical validations and results summarised in a document
      parameters:
        - name: id
          in: query
          description: Invoice ID
          schema:
            type: string
      responses:
        '200':
          description: Log report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogReport'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
    UserDetails:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    InvoiceData:
      type: object
      properties:
        invoiceNumber:
          type: string
        date:
          type: string
        total:
          type: number
    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
        errors:
          type: array
          items:
            type: string
    Invoice:
      type: object
      properties:
        id:
          type: string
        invoiceNumber:
          type: string
        date:
          type: string
        total:
          type: number
    Report:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    SettingsData:
      type: object
      properties:
        setting1:
          type: string
        setting2:
          type: boolean
    Settings:
      type: object
      properties:
        setting1:
          type: string
        setting2:
          type: boolean
    Log:
      type: object
      properties:
        logID:
          type: string
        message:
          type: string
        timestamp:
          type: string
    Documentation:
      type: object
      properties:
        content:
          type: string
    HelpResources:
      type: object
      properties:
        resources:
          type: array
          items:
            type: string
    Version:
      type: object
      properties:
        version:
          type: string
    LogReport:
      type: object
      properties:
        reportID:
          type: string
        logData:
          type: array
          items:
            $ref: '#/components/schemas/Log'

